<?xml version="1.0" encoding="UTF-8"?>
<project name="Ant JaCoCo" default="all" basedir="." xmlns:sonar="antlib:org.sonar.ant">

  <property name="src.dir" value="src"/>

  <property name="test.dir" value="test" />
  <property name="lib.dir" value="../ant-libs"/>

  <property name="lib.junit.dir" value="${lib.dir}/junit"/>

  <property name="build.dir" value="target"/>

  <property name="classes.dir" value="${build.dir}/classes"/>

  <property name="reports.dir" value="${build.dir}/reports"/>
  <property name="reports.junit.xml.dir" value="${reports.dir}/junit/xml"/>
  <property name="reports.junit.html.dir" value="${reports.dir}/junit/html"/>

  <path id="classpath">
    <fileset dir="${lib.junit.dir}" includes="*.jar"/>
  </path>

  <taskdef name="junit" classname="org.apache.tools.ant.taskdefs.optional.junit.JUnitTask">
    <classpath>
      <path refid="classpath"/>
    </classpath>
  </taskdef>

  <taskdef name="junitreport" classname="org.apache.tools.ant.taskdefs.optional.junit.XMLResultAggregator">
    <classpath>
      <path refid="classpath"/>
    </classpath>
  </taskdef>

  <target name="clean" description="Remove all files created by the build/test process.">
    <delete dir="${build.dir}" />
    <delete dir="${reports.dir}" />
  </target>

  <target name="init" >
    <mkdir dir="${build.dir}" />
    <mkdir dir="${classes.dir}" />
    <mkdir dir="${reports.dir}" />
    <mkdir dir="${reports.junit.xml.dir}" />
    <mkdir dir="${reports.junit.html.dir}" />
  </target>

  <target name="compile" depends="init">
    <javac srcdir="${src.dir}" destdir="${classes.dir}" classpathref="classpath" fork="true" debug="true" includeAntRuntime="false" />
    <javac srcdir="${test.dir}" destdir="${classes.dir}" classpathref="classpath" fork="true" debug="true" includeAntRuntime="false" />
  </target>

  <target name="test" depends="compile">
    <!-- Import JaCoCo Ant tasks -->
    <taskdef uri="antlib:org.jacoco.ant" resource="org/jacoco/ant/antlib.xml">
      <classpath path="../ant-libs/JaCoCo/jacocoant.jar" />
    </taskdef>

    <jacoco:coverage destfile="target/jacoco.exec" xmlns:jacoco="antlib:org.jacoco.ant">
      <junit fork="yes" dir="${basedir}" failureProperty="test.failed">
        <classpath location="${classes.dir}" />
        <classpath refid="classpath" />

        <formatter type="xml" />
        <batchtest todir="${reports.junit.xml.dir}">
          <fileset dir="${test.dir}">
            <include name="**/*Test.java" />
          </fileset>
        </batchtest>
      </junit>
    </jacoco:coverage>

    <junitreport todir="${reports.junit.html.dir}">
      <fileset dir="${reports.junit.xml.dir}">
        <include name="TEST-*.xml" />
      </fileset>
      <report format="frames" todir="${reports.junit.html.dir}" />
    </junitreport>
  </target>

  <!-- Define Sonar Properties -->
  <property name="sonar.projectKey" value="org.sonar.ant.tests:jacoco" />
  <property name="sonar.projectName" value="Ant JaCoCo" />
  <property name="sonar.projectVersion" value="0.1-SNAPSHOT" />
  <property name="sonar.sources" value="${src.dir}" />
  <property name="sonar.tests" value="${test.dir}" />
  <property name="sonar.binaries" value="${classes.dir}" />
  <property name="sonar.dynamicAnalysis" value="reuseReports" />
  <property name="sonar.junit.reportsPath" value="${reports.junit.xml.dir}" />
  <property name="sonar.core.codeCoveragePlugin" value="jacoco" />
  <!-- Deprecated property needed for IT with Sonar 3.0 -->
  <property name="sonar.surefire.reportsPath" value="${reports.junit.xml.dir}" />

  <target name="sonar">
    <!-- Import Sonar Ant tasks -->
    <taskdef uri="antlib:org.sonar.ant" resource="org/sonar/ant/antlib.xml">
      <classpath path="../../../sonarqube-ant-task/target/sonarqube-ant-task.jar" />
    </taskdef>

    <!-- Execute Sonar -->
    <sonar:sonar />
  </target>

  <target name="all"
          depends="clean,compile,test,sonar"
          description="Compile, run the tests and generate JUnit and coverage reports." />

</project>
